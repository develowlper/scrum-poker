/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GamesGameIdIndexRouteImport } from './routes/games/$gameId/index'
import { Route as GamesGameIdSpectatorRouteImport } from './routes/games/$gameId/spectator'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesGameIdIndexRoute = GamesGameIdIndexRouteImport.update({
  id: '/games/$gameId/',
  path: '/games/$gameId/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesGameIdSpectatorRoute = GamesGameIdSpectatorRouteImport.update({
  id: '/games/$gameId/spectator',
  path: '/games/$gameId/spectator',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/games/$gameId/spectator': typeof GamesGameIdSpectatorRoute
  '/games/$gameId': typeof GamesGameIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/games/$gameId/spectator': typeof GamesGameIdSpectatorRoute
  '/games/$gameId': typeof GamesGameIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/games/$gameId/spectator': typeof GamesGameIdSpectatorRoute
  '/games/$gameId/': typeof GamesGameIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/games/$gameId/spectator' | '/games/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/games/$gameId/spectator' | '/games/$gameId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/games/$gameId/spectator'
    | '/games/$gameId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GamesGameIdSpectatorRoute: typeof GamesGameIdSpectatorRoute
  GamesGameIdIndexRoute: typeof GamesGameIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$gameId/': {
      id: '/games/$gameId/'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof GamesGameIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$gameId/spectator': {
      id: '/games/$gameId/spectator'
      path: '/games/$gameId/spectator'
      fullPath: '/games/$gameId/spectator'
      preLoaderRoute: typeof GamesGameIdSpectatorRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GamesGameIdSpectatorRoute: GamesGameIdSpectatorRoute,
  GamesGameIdIndexRoute: GamesGameIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
